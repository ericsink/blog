
inconsistency between items included on front page of blog
vs. the rss feed

--

code formatting.  screen.

toc for Best Of

put the twitter and github links back somewhere
in the layout?

toc for Veracity?

toc for SourceGear?

toc for Zumero?

toc for xamarin forms?

toc for dotnet?

toc for rx

toc for (mssql_to_sqlite) ?

toc for old wpf stuff?

toc for scm?

toc for 22 laws?

tag things with keywords for fsharp, rust, etc

and sqlite.  and xamarin.

what date format should tocs use?

front_matter for gen could contain other parameters
used to construct the content.  like for rss, the
number of items to include.

mt princeton image is too heavy?

https://developer.mozilla.org/en-US/docs/Mozilla/Mobile/Viewport_meta_tag
<meta name="viewport" content="width=device-width, initial-scale=1">

fonts look too big on desktop, still not right
on phone.  probably need to use a media query.
better.

get rid of amazon affiliate links

are there other things in item_ddddd that are dupes
of other things?

pretty format all the html

font tags

center tags

excessive use of <br>

entries that assume they are inside a table.
no tr/td stuff unless the entry has a table
of its own.

so many &nbsp;

does google analytics still work?

generate some kind of complete index?  so that robots
can find everything?

hitting /vcbe yields error but vcbe/index.html works.
bucket config issue?

includes, like jekyll ?

--

link to blog repo on github, issues, pull requests,
etc

need link checking, for within-the-site links,
just to make sure they actually go somewhere.
did this, but it probably doesn't work with tocs.
maybe a link checker that runs against wwwroot

--

F# like C#

autogen dsl

viewmodels, but maybe not using the term
the way everyone else does.  all rx.

validators

layout completely separate layer

XF but mostly doesn't know, no XAML,
no binding

viewmodel invocations.  no implicit back
stack.  name + params.  params are checked
and type-checked.  catch errors earlier.

props with origins, merging, fix ordering
and race problems with init vs set

sqlite on the client, of course  :-)

postgres on the server

query server, subscribe to queries

state of each client db instance kept on server

scale out not up

websockets, persistent connections

other plain rest, but same msg format

DI, but plain, no container

testing with a fake implementation of XF

in rxui, everything is a prop first and reflection
is used to make it observable.  WhenAnyValue.  in my
approach, the observable is first-class and the prop
nature is secondary.


