
er, 20010830 appears to be a copy of item_10065.
looks like all the ArticleBlurbCell items are
like that.  just remove them all?

hmmm.  20040601 is item_10173, but it contains more

20030603 contains items 10098 AND 10099

this one the script got fooled:
20030730.html (1) claims item_10172.html but len diff 313

some of the 200x.html items are dupes of things
with names not like item_xxxxx.  about author is one.

I don't think I've found a 200x item that is not
a dupe of other item(s)

for those old items, the date in the text doesn't
match the date in the front matter

it looks like there may be item_ddddd items that are
dupes of something else

font tags

center tags

excessive use of <br>

entries that assume they are inside a table.
no tr/td stuff unless the entry has a table
of its own.

so many &nbsp;

fix all links to software.ericsink.com, etc

fonts look too big on desktop, still not right
on phone.  probably need to use a media query.

4 items across in header links might still
be too wide for cell phone screens

Best Of

does google analytics still work?

which links are worth including in the lite header?

sg services link

generate some kind of complete index?  so that robots
can find everything?

hitting /vcbe yields error but vcbe/index.html works.
bucket config issue?

includes, like jekyll ?

--

link to blog repo on github, issues, pull requests,
etc

redo front page.  no more complete copies of
recent items?  each item appears on its own page.

need link checking, for within-the-site links,
just to make sure they actually go somewhere.

--

F# like C#

autogen dsl

viewmodels, but maybe not using the term
the way everyone else does.  all rx.

validators

layout completely separate layer

XF but mostly doesn't know, no XAML,
no binding

viewmodel invocations.  no implicit back
stack.  name + params.  params are checked
and type-checked.  catch errors earlier.

props with origins, merging, fix ordering
and race problems with init vs set

sqlite on the client, of course  :-)

postgres on the server

query server, subscribe to queries

state of each client db instance kept on server

scale out not up

websockets, persistent connections

other plain rest, but same msg format

DI, but plain, no container

testing with a fake implementation of XF

in rxui, everything is a prop first and reflection
is used to make it observable.  WhenAnyValue.  in my
approach, the observable is first-class and the prop
nature is secondary.


